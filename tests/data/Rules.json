[
    {
        "id":1,
        "title":"Block test parameter being present in the URL",
        "rules":[{"parameter":"get.test","match":{"type":"isset"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":2,
        "title":"Block backdoor parameter in payload set to mybackdoor and user agent containing some_backdoor_agent.",
        "rules":[{"parameter":"post.backdoor","match":{"type":"equals","value":"mybackdoor"},"inclusive":true},{"parameter":"server.HTTP_USER_AGENT","match":{"type":"contains","value":"some_backdoor_agent"},"inclusive":true}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":3,
        "title":"Block a base64 json encoded request with the user_role parameter set to administrator",
        "rules":[{"parameter":"post.payload","mutations":["base64_decode","json_decode"],"match":{"type":"array_key_value","key":"user_role","match":{"type":"equals","value":"administrator"}}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":4,
        "title":"Block WordPress WP-AJAX action restaurant_system_customize_button or restaurant_system_insert_dialog, when not executed by an administrator.",
        "rules":[{"parameter":"rules","rules":[{"parameter":"get.action","match":{"type":"in_array","value":["restaurant_system_customize_button","restaurant_system_insert_dialog"]}},{"parameter":"post.action","match":{"type":"in_array","value":["restaurant_system_customize_button","restaurant_system_insert_dialog"]}}],"inclusive":true},{"parameter":false,"match":{"type":"current_user_cannot","value":"administrator"},"inclusive":true}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":5,
        "title":"Block WordPress WP-AJAX action restaurant_system_customize_button or restaurant_system_insert_dialog.",
        "rules":[{"parameter":"get.action","match":{"type":"in_array","value":["restaurant_system_customize_button","restaurant_system_insert_dialog"]}},{"parameter":"post.action","match":{"type":"in_array","value":["restaurant_system_customize_button","restaurant_system_insert_dialog"]}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":6,
        "title":"Block access to specific WP-JSON endpoint.",
        "rules":[{"parameter":"server.REQUEST_URI","match":{"type":"contains","value":"yikes\/cpt\/v1\/settings"}},{"parameter":"post.rest_route","match":{"type":"contains","value":"yikes\/cpt\/v1\/settings"}},{"parameter":"get.rest_route","match":{"type":"contains","value":"yikes\/cpt\/v1\/settings"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":7,
        "title":"Block access to endpoint that should only accept an integer of less than 101.",
        "rules":[{"parameter":"get.pid","match":{"type":"ctype_digit","value":false}},{"parameter":"get.pid","match":{"type":"more_than","value":100}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":8,
        "title":"Block access to endpoint that should only accept an integer of more than 99.",
        "rules":[{"parameter":"get.pid","match":{"type":"ctype_digit","value":false}},{"parameter":"get.pid","match":{"type":"less_than","value":100}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":9,
        "title":"Determine if a POST parameter is a ctype_alnum.",
        "rules":[{"parameter":"post.value","match":{"type":"ctype_alnum","value":false}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":10,
        "title":"Determine if a POST parameter is a numeric.",
        "rules":[{"parameter":"post.number","match":{"type":"is_numeric","value":false}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":11,
        "title":"Determine if the URL matches a regex",
        "rules":[{"parameter":"server.REQUEST_URI","match":{"type":"regex","value":"\/(\\\/something\\\/)\/msi"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":12,
        "title":"Determine if a value is not in an array",
        "rules":[{"parameter":"get.user","match":{"type":"not_in_array","value":["admin"]}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":13,
        "title":"Determine if an array contains any values from given array.",
        "rules":[{"parameter":"post.usernames","match":{"type":"array_in_array","value":["test","admin"]}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":14,
        "title":"Determine if a certain value is present anywhere in the request.",
        "rules":[{"parameter":"all","mutations":["getArrayValues"],"match":{"type":"regex","value":"\/(\\\/something\\\/)\/msi"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":15,
        "title":"Determine if a certain value is present anywhere in any uploaded file.",
        "rules":[{"parameter":"files.img","match":{"type":"file_contains","match":{"type":"contains","value":"<?php"}}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":16,
        "title":"Determine if a URL parameter contains an open redirect vulnerability.",
        "rules":[{"parameter":"get.tourl","match":{"type":"hostname"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":17,
        "title":"Block Social Warfare Vulnerability",
        "rules":[{"parameter":"get.swp_debug","match":{"type":"equals","value":"load_options"},"inclusive":true},{"parameter":false,"match":{"type":"current_user_cannot","value":"administrator"},"inclusive":true}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":18,
        "title":"Determine if a POST parameter is a ctype_special.",
        "rules":[{"parameter":"post.value","match":{"type":"ctype_special","value":false}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":19,
        "title":"Determine if a POST parameter (using wildcard) contains a certain character.",
        "rules":[{"parameter":"post.user.role.type*","match":{"type":"contains","value":"administrator"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":20,
        "title":"Determine if a POST parameter does not contain a substring.",
        "rules":[{"parameter":"post.what","match":{"type":"not_contains","value":"test"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":21,
        "title":"Block a specific WordPress shortcode attribute from containing a bad value.",
        "rules":[{"parameter":"post.content","mutations":["getShortcodeAtts"],"match":{"type":"array_key_value","key":"learn_press_featured_courses.order","match":{"type":"contains","value":")"}}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":22,
        "title":"Block search parameter containing single or double quotes.",
        "rules":[{"parameter":"get.search","match":{"type":"quotes"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    },
    {
        "id":23,
        "title":"Block search parameter containing an inline HTML injection.",
        "rules":[{"parameter":"get.search","match":{"type":"inline_xss"}}],
        "cat":"TEST",
        "type":"BLOCK",
        "type_params":null
    }
]